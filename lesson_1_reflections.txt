How did viewing a diff between two versions of a file help you see the
bug that was introduced?

	In long files, finding what has changed between each edit can be
	very time consuming.

How could having easy access to the entire history of a file make you
a more efficient programmer in the long term?

	Knowing I could allways return to the curent state, would make me
	less scared of making changes, and try new stuff.

What do you think are the pros and cons of manually choosing when to
create a commit, like you do in Git, vs having versions automatically
saved, like Google Docs does?

	The pros of doing it yourself is that you can make meaningfull chunks
	of work. The con is that you forget to commit.

Why do you think some version control systems, like Git, allow saving
multiple files in one commit, while others, like Google Docs, treat each
file separately?

	Git is meant for programmers and the projects they make. Since programmers
	often changes multiple files at the same time to complete a task, it makes
	sense that the version control system understands this concept.
	Users of Google docs may also have this need but thet are just out of luck.

How can you use the commands git log and git diff to view the history of files?

	There are many! Diff is for seeing changes between two commits and log is for
	listing commits over time.

	git log
		See http://git-scm.com/docs/git-log
	git diif
		See http://git-scm.com/docs/git-diff

How might using version control make you more confident to make changes
that could break something?

	Exactly. A lot!

Now that you have your workspace set up, what do you want to try using Git for?

	I would like to use git for my next project.

